initSidebarItems({"trait":[["Intrusive","Trait defining routines for translation between containing structure and intrusive field. The only implementors of this type should be the pointer-types defined by the `containerof_intrusive` macro."],["IntrusiveBase",""]],"struct":[["BorrowBox",""],["BorrowBoxMut",""],["IntrusiveAlias","Alias that has the same representation as an intrusive type. The idea is to be able to use this alias for intrusive facility implementations, by defining the \"true\" implementation of the facility to use the single (but type-unsafe) IntrusiveAlias type, while allowing type-safe wrapper implementations to delegate their behavior to the implementation function."],["OwnBox",""]],"macro":[["containerof_field_offset!","Implement C-like `offsetof` macro in Rust. Will become obsolete when-and-if offsetof() is implemented in the core language."],["containerof_intrusive!","Define a type representing the translation between an intrusive field and its containing structure."]]});